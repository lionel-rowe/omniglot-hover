import dedent from 'string-dedent'
import { fromFileUrl, relative } from '@std/path'

await build()

for await (const event of Deno.watchFs('./src')) {
	if (event.kind === 'modify') await build()
}

async function build() {
	console.info('Rebuilding user script...')

	const [metadata, script, styles] = await Promise.all([
		'./src/metadata.txt',
		'./src/script.mjs',
		'./src/styles.css',
	].map((path) => Deno.readTextFile(path)))

	const userScript = dedent`
		${metadata.trim()}

		// ðŸš¨ Generated by ~/${relative('.', fromFileUrl(import.meta.url))}, do not edit directly.

		${script.trim()}
		
		void (document.documentElement ?? document.head).insertAdjacentHTML(
			'beforeend',
			${JSON.stringify(`<style>${styles.trim()}</style>`)},
		)\n
	`

	await Deno.writeTextFile('./dist/omniglot-hover.user.js', userScript)
	await new Deno.Command('deno', {
		args: ['fmt', './dist/omniglot-hover.user.js'],
	}).spawn().output()
}
