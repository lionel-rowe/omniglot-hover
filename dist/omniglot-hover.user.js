// ==UserScript==
// @name         Alt text to title
// @namespace    https://github.com/lionel-rowe/
// @version      0.1
// @description  Alt text to title
// @author       https://github.com/lionel-rowe/
// @match        https://www.omniglot.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=omniglot.com
// @updateURL    https://github.com/lionel-rowe/omniglot-hover/raw/refs/heads/main/dist/omniglot-hover.user.js
// @downloadURL  https://github.com/lionel-rowe/omniglot-hover/raw/refs/heads/main/dist/omniglot-hover.user.js
// @run-at       document-start
// @grant        none
// ==/UserScript==

// ðŸš¨ Generated by ~/scripts/watch.ts, do not edit directly.

// @ts-check
/// <reference lib="DOM" />
/// <reference lib="DOM.iterable" />

/** @type {WeakSet<HTMLImageElement>} */
const seen = new WeakSet()

function addAllOverlays() {
	const imgs = /** @type {NodeListOf<HTMLImageElement>} */ (document.querySelectorAll('img[alt]'))
	for (const img of imgs) {
		if (seen.has(img)) continue
		addOverlay(img)
	}
}

/**
 * Match any non-Latin word-like character, on the assumption that any image with matching alt text is likely to be
 * "interesting" for the purposes of copiable text, e.g. a language sample.
 * @param {string} alt
 */
function isInteresting(alt) {
	return /[\p{L}\p{M}\p{N}]/u.test(alt.replaceAll(/[\w\p{scx=Latn}]/gu, ''))
}

/** @param img {HTMLImageElement} */
function addOverlay(img) {
	seen.add(img)

	const { alt } = img

	const parent = document.createElement('span')
	parent.className = 'omniglot-hover'
	img.replaceWith(parent)

	const overlay = document.createElement('div')
	overlay.className = 'omniglot-hover-overlay'

	const text = document.createElement('div')
	text.className = 'omniglot-hover-text'
	text.textContent = alt

	if (isInteresting(alt)) {
		const copyButton = document.createElement('button')
		copyButton.className = 'omniglot-hover-copy-button'
		copyButton.textContent = 'Copy'
		copyButton.addEventListener('click', () => {
			navigator.clipboard.writeText(alt)
			copyButton.textContent = 'Copied!'
			setTimeout(() => {
				copyButton.textContent = 'Copy'
			}, 2000)
		})
		text.append(copyButton)
	}

	overlay.append(text)
	parent.append(img, overlay)
}

const getObservableElements = () => [
	document.documentElement,
	document.body,
]

/** @type {MutationObserver} */
let observer
observe()

function observe() {
	const observableElements = getObservableElements()
	const foundIndex = observableElements.findLastIndex((target) => target != null)
	const target = observableElements[foundIndex]

	// keep observing until the last target is rendered to the DOM
	let callback = observe
	if (foundIndex === observableElements.length - 1) {
		// run immediately in case matching images are already present
		addAllOverlays()
		// then observe for new images
		callback = addAllOverlays
	}

	observer?.disconnect()
	observer = new MutationObserver(callback)
	observer.observe(target, { subtree: true, childList: true })
}

void (document.documentElement ?? document.head).insertAdjacentHTML(
	'beforeend',
	'<style>.omniglot-hover {\n\tposition: relative;\n\tdisplay: inline-block;\n\tline-height: 0;\n}\n\n.omniglot-hover * {\n\tbox-sizing: border-box;\n}\n\n.omniglot-hover-overlay {\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\tmax-height: 100%;\n\toverflow-y: auto;\n\twhite-space: pre-wrap;\n\ttransition: opacity 0.3s ease-in-out;\n\tpadding: 0.5rem;\n\tfont-size: 0.8rem;\n\tbackground-color: #000c;\n\tcolor: white;\n\tline-height: 1.5;\n}\n\n.omniglot-hover:not(:hover) .omniglot-hover-overlay {\n\topacity: 0;\n}\n\n.omniglot-hover-overlay::-webkit-scrollbar {\n\twidth: 8px;\n}\n\n.omniglot-hover-overlay::-webkit-scrollbar-thumb {\n\tbackground: rgba(255, 255, 255, 0.5);\n\tborder-radius: 4px;\n}\n\n.omniglot-hover-text {\n\tdisplay: block;\n\twidth: 100%;\n}\n\n.omniglot-hover-copy-button {\n\tfloat: right;\n\tcursor: pointer;\n\tborder: none;\n\tfont-weight: bold;\n\tbackground: #ccc;\n\tcolor: black;\n\tborder-radius: 3px;\n\tpadding: 0.2rem;\n\ttransition: background 0.3s ease-in-out;\n\tmargin-left: 0.5rem;\n}\n\n.omniglot-hover-copy-button:hover {\n\tbackground: #fff;\n}</style>',
)
